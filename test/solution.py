# считываю из файла input.txt всё содержимое по строчно, где каждая строка является данными о выстпулении
# одного из выступающих актёров, в переменную InputData
with open("input.txt", "r") as iFile:
    InputData = iFile.readlines()


# создаю переменные в которых будет кол-во микрофонов для левой и правой кулис
countForLeft = 0
countForRight = 0


# создаю пременную со списком удалённых строк из InputData с данными о выступлений тех актёров, 
# для которых ещё один микрофон не нужен, так как им могут передать микрофон актёры,
# которые уже выступели и уходят со сцены в то же время и через ту же кулису,
# что и эти выходящие на сцену актёры
deleted = []

del InputData[0]


# создаю функцию которая проверяет является ли содержимое параметров current и index 
# элементами одного из списка в списке deleted, путём перебора списков из списка deleted 
# и проверки каждого элемента одного из списка на совпадание с содержимым параметров current и index
def deleted_or_not_deleted(current, index,  deleted):
    for list in deleted:
        if list[0] == current and list[1] == index:
            return False
            break
    else:
        return True


# ниже в теле цикла fоr, проверяю есть ли элементы в списке в InputData,
# являющиеся данными о выступлении актёра, такие что, 
# у одного из акёров время и кулиса ухода со сцены, 
# совпадали со временем и кулисой выхода на сцену у другого,
# если совпадают и один из одновременно и через одну и ту же кулису уходящих актёров актёр предаёт микрофон только одному 
# из одновременно выходящих и через эту же и одну и ту же килису актёров актёру, то из списка InputData удаляю данные 
# выходящего актёра, так как для него дополнительный микрофон не нужен, 
# потому что ему может передать микрофон уходящий актёр


for currentData in InputData:

    # создаю копию списка InputData без элемента currentData
    WithoutCurrent = InputData.copy()

    del WithoutCurrent[InputData.index(currentData)]

    for compareData in WithoutCurrent:

        # разбиваю строки currentData и compareData на списки из элементов,
        # которые были соедененны в строках пробелом
        currentDataArtist = currentData.split(" ")
        compareDataArtist = compareData.split(" ")

        # получаю индекс элемента, из списка WithoutCurrent,
        # в списке InputData
        index = InputData.index(compareData)


        # проверяю совпадает ли время ухода со сцены и кулиса, через которую должен уходить актёр, 
        # строка с данными которого является элементом списка currentData, 
        # со временем выхода актёра на сцену и кулиса, через которую должен выходить актёр,
        # строка с данными которого является элементом списка currentData, 
        # так как если время совпадает, то тогда уходящий может передать микрофоно выходящиму, а значит, 
        # минимальное количество микрофонов должно быть меньше на один микрофон.
        # Также с помощью функции deleted_or_not_deleted проверяю чтобы каждый из одновременно уходящих со сцены актёров
        # и через одну и ту же кулису, мог передать микрофон,
        # только одному из каждых одновременно выходящих на сцену актёров, 
        # в то же время и через ту же кулису что и уходящие со сцены
        if ((currentDataArtist[1] == compareDataArtist[0]) and (currentDataArtist[3].strip() == compareDataArtist[2])
                and deleted_or_not_deleted(currentDataArtist, index,  deleted)):


            # добавляю в конец списка удалённых данных о выступлений тех актёров, 
            # для которых ещё один микрофон не нужен, 
            # так как им могут передать микрофон актёры данные о выступлениях которых остались в списке InputData,
            # список из строки данных о выступлении каждого из актёров, и присвоенный индекс каждому из актёров
            deleted.append([compareDataArtist, index])

            # удаляю элемент из списка InputData под индексом index
            del InputData[index]


# в теле цикла for, смотрю в строках из списка InputData, 
# являющиеся данными о выступлении актёров, для каждого из которых
# нужен дополнительный микрофон, 
# одна из которых при каждой отдельной итерации цикла for записывается в переменную data,
# до тех пор пока цикл не прошёлся по всем элементам списка InputData, 
# из какой кулисы во время выхода на сцену актёр
# должен взять микрофон   

for data in InputData:
    if data.split(" ")[2] == "l":
        countForLeft += 1
    elif data.split(" ")[2] == "r":
        countForRight += 1


# записываю количестов микрофонов для левой и правой кулис в файл output.txt
with open("output.txt", "w") as oFile:
    oFile.write(f"{countForLeft} {countForRight}")